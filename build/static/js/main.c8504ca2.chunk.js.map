{"version":3,"sources":["serviceWorker.js","context/Auth.context.js","hooks/http.hook.js","pages/RegistrationPage.js","pages/AuthPage.js","components/ToolBar.js","components/CheckBox.js","components/TableUsers.js","pages/ManagerPage.js","components/Loader.js","components/Navigation.js","App.js","hooks/auth.hook.js","routs.js","index.js"],"names":["Boolean","window","location","hostname","match","plug","AuthContext","createContext","token","userLog","login","logout","isAuthenticated","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","RegistrationPage","auth","useContext","email","password","form","setForm","changeHandler","event","target","name","value","registerHandler","e","preventDefault","console","log","userId","Row","className","Col","xs","lg","Card","Body","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","minLength","maxLength","Alert","variant","Button","AuthPage","loginHandler","ToolBar","deleteUser","block","unBlock","onClick","style","marginRight","color","size","CheckBox","user","checkHandler","key","id","checked","press","TableUsers","users","pick","setChecked","selectAll","setSelectAll","stateSelect","setStateSelect","useEffect","forEach","prev","sendStateCheck","filter","checkBox","push","putCheckBoxHandler","map","Table","striped","bordered","hover","i","date_registration","date_last_login","status","ManagerPage","setUsers","select","setSelect","getUsers","Authorization","fetched","unBlockUserHandler","length","deleteUserHandler","currentUser","BlockUserHandler","element","selectUser","Loader","position","width","height","display","alignItems","Spinner","animation","Navigation","userLogin","Navbar","bg","expand","Container","Nav","Link","href","to","App","setToken","setUserLog","setUserId","ready","setReady","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRouters","Provider","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c8504ca2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createContext } from 'react';\r\n\r\nfunction plug() { };\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userLog: null,\r\n    login: plug,\r\n    logout: plug,\r\n    isAuthenticated: false\r\n  });","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n\r\n            const response = await fetch(url, { method, body, headers });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так');\r\n            }\r\n\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError };\r\n}","import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../context/Auth.context';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport const RegistrationPage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { request, error } = useHttp();\r\n  const [form, setForm] = useState({\r\n    email: '', login: '', password: ''\r\n  });\r\n\r\n  const changeHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = await request('/api/auth/register', 'POST', { ...form });\r\n      console.log(error)\r\n      if (data) {\r\n        auth.login(data.token, data.userLog, data.userId);\r\n      }\r\n    } catch (e) { }\r\n  }\r\n\r\n  return (\r\n    <Row className=\"justify-content-md-center\">\r\n      <Col xs lg=\"6\" className=\" mt-5\">\r\n        <Card>\r\n          <Card.Body>\r\n            <h1>Registration</h1>\r\n            <Form onSubmit={registerHandler}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={form.email}\r\n                  onChange={changeHandler} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicLogin\">\r\n                <Form.Label>Login</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  minLength=\"1\"\r\n                  maxLength=\"20\"\r\n                  type=\"text\"\r\n                  name=\"login\"\r\n                  placeholder=\"Enter login\"\r\n                  value={form.login}\r\n                  onChange={changeHandler} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  minLength=\"1\"\r\n                  maxLength=\"20\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={form.password}\r\n                  onChange={changeHandler} />\r\n              </Form.Group>\r\n              {error && <Alert variant='danger'>{error}</Alert>}\r\n              <Button\r\n                variant=\"primary\"\r\n                type='submit'>\r\n                Submit</Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../context/Auth.context';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { request, error } = useHttp();\r\n  const [form, setForm] = useState({\r\n    login: '', password: ''\r\n  });\r\n\r\n  const changeHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = await request('/api/auth/login', 'POST', { ...form });\r\n      if (data) {\r\n        auth.login(data.token, data.userLog, data.userId);\r\n      }\r\n    } catch (e) { }\r\n  }\r\n\r\n  return (\r\n    <Row className='justify-content-md-center'>\r\n      <Col xs lg='6' className=' mt-5'>\r\n        <Card>\r\n          <Card.Body>\r\n            <h1>Authorization</h1>\r\n            <Form onSubmit={loginHandler}>\r\n              <Form.Group controlId='formBasicLogin'>\r\n                <Form.Label>Login</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type='text'\r\n                  name='login'\r\n                  placeholder='Enter login'\r\n                  value={form.login}\r\n                  onChange={changeHandler}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId='formBasicPassword'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type='password'\r\n                  name='password'\r\n                  placeholder='Password'\r\n                  value={form.password}\r\n                  onChange={changeHandler} />\r\n              </Form.Group>\r\n              {error && <Alert variant='danger'>{error}</Alert>}\r\n              <Button\r\n                variant='primary'\r\n                type='submit'>\r\n                Login</Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","import React from 'react'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ArchiveFill } from 'react-bootstrap-icons';\r\nimport { ShieldFillX } from 'react-bootstrap-icons';\r\nimport { ShieldFillCheck } from 'react-bootstrap-icons';\r\n\r\nexport const ToolBar = ({deleteUser, block, unBlock}) => {\r\n\r\n    return (\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs lg=\"10\" className=\" mt-5\">\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={block}\r\n                    style={{ marginRight: '20px'}}\r\n                ><ShieldFillX color=\"#00ff09\" size={34} /></Button>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={unBlock}\r\n                    style={{ marginRight: '20px'}}\r\n                ><ShieldFillCheck color=\"yellow\" size={34}/></Button>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={deleteUser}\r\n                    style={{ marginRight: '20px'}}\r\n                ><ArchiveFill   color=\"#fff\" size={34}/></Button>\r\n                \r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const CheckBox = ({ user, checkHandler }) => {\r\n  return (\r\n    <>\r\n      {user\r\n        &&\r\n        <input\r\n          key={user.id}\r\n          onChange={checkHandler}\r\n          type=\"checkbox\"\r\n          checked={user.press}\r\n          value={user.id} />\r\n      }\r\n    </>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { CheckBox } from './CheckBox';\r\n\r\nexport const TableUsers = ({ users, pick }) => {\r\n  const [checked, setChecked] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [stateSelect, setStateSelect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    users.forEach(user => {\r\n      setChecked(prev => ([\r\n        ...prev, {\r\n          id: user.id,\r\n          press: false\r\n        }\r\n      ]));\r\n    });\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    let sendStateCheck = [];\r\n    \r\n    checked.filter(checkBox => {\r\n      if(checkBox.press) {\r\n        sendStateCheck.push(checkBox.id)\r\n        return checkBox.id\r\n      }\r\n      return false\r\n    })\r\n\r\n    pick(sendStateCheck);\r\n    setStateSelect(false);\r\n  }, [stateSelect, checked]); \r\n\r\n  const emphasise = () => {\r\n    setChecked(checked.map(checkBox => {\r\n      return {\r\n        id: checkBox.id,\r\n        press: !selectAll\r\n      }\r\n    }))\r\n    setSelectAll(!selectAll);\r\n    setStateSelect(true);\r\n  }\r\n\r\n  const putCheckBoxHandler = e => {\r\n    setChecked(checked.map(checkBox => {\r\n      if (checkBox.id === +e.target.value) {\r\n        return {\r\n          id: checkBox.id,\r\n          press: !checkBox.press\r\n        };\r\n      }\r\n      return checkBox;\r\n    }))\r\n    setStateSelect(true)\r\n  }\r\n\r\n  return (\r\n    <Row className=\"justify-content-md-center\">\r\n      <Col xs lg=\"10\" className=\" mt-5\">\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th><Button\r\n                variant=\"info\"\r\n                onClick={emphasise}\r\n              >Select all</Button></th>\r\n              <th>id</th>\r\n              <th>Login</th>\r\n              <th>Email</th>\r\n              <th>Data registration</th>\r\n              <th>Data last login</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users && users.map((user, i) => {\r\n              return (\r\n                <tr key={user.id}>\r\n                  <td>\r\n                    <CheckBox\r\n                      user={checked[i]}\r\n                      checkHandler={putCheckBoxHandler}\r\n                    />\r\n                  </td>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.login}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.date_registration}</td>\r\n                  <td>{user.date_last_login}</td>\r\n                  <td>{!!+user.status ? 'not block' : 'block'}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","\r\nimport React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport { ToolBar } from '../components/ToolBar';\r\nimport { TableUsers } from '../components/TableUsers';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { AuthContext } from '../context/Auth.context';\r\n\r\nexport const ManagerPage = () => {\r\n  const { request, loading } = useHttp();\r\n  const auth = useContext(AuthContext);\r\n  const [users, setUsers] = useState();\r\n  const [select, setSelect] = useState([]);\r\n\r\n  const getUsers = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/users`, 'GET', null, {\r\n        Authorization: `Bearer ${auth.token}`\r\n      });\r\n      setUsers(fetched);\r\n    } catch (e) { }\r\n  }, [auth, request]);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, [getUsers]);\r\n\r\n  const selectUserHandler = (selectUser) => {\r\n    setSelect(selectUser)\r\n  }\r\n  \r\n  const unBlockUserHandler = async () => {\r\n    if (select.length !== 0) {\r\n      try {\r\n        await request('/api/users/unblock', 'POST', select, {\r\n          Authorization: `Bearer ${auth.token}`\r\n        });\r\n        setSelect([]);\r\n        await getUsers();\r\n      } catch (e) { };\r\n    }\r\n  }\r\n\r\n  const deleteUserHandler = async () => {\r\n    if (select.length !== 0) {\r\n      try {\r\n        await request('/api/users/delete', 'POST', select, {\r\n          Authorization: `Bearer ${auth.token}`\r\n        })\r\n        currentUser();\r\n      } catch (e) { }\r\n    }\r\n  }\r\n\r\n  const BlockUserHandler = async () => {\r\n    if (select.length !== 0) {\r\n      try {\r\n        await request('/api/users/block', 'POST', select, {\r\n          Authorization: `Bearer ${auth.token}`\r\n        })\r\n        currentUser();\r\n      } catch (e) { }\r\n    }\r\n  }\r\n\r\n  const currentUser = async() => {\r\n    const filterUser = select.filter(element => {\r\n      if (auth.userId === +element) {\r\n        auth.logout();\r\n        return true;\r\n      }\r\n      return false\r\n    });\r\n    if (!filterUser.length) {\r\n      setSelect([]);\r\n      await getUsers();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToolBar\r\n        deleteUser={deleteUserHandler}\r\n        unBlock={unBlockUserHandler}\r\n        block={BlockUserHandler}\r\n      />\r\n      {users &&\r\n        <TableUsers\r\n          users={users}\r\n          pick={selectUserHandler}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"d-flex justify-content-center\" style={{\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }}>\r\n    <Spinner animation=\"border\" variant=\"primary\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AuthContext } from '../context/Auth.context';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nexport const Navigation = ({isAuthenticated, userLogin}) => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <Navbar bg=\"primary\" expand=\"lg\">\r\n            <Container>\r\n                {!isAuthenticated &&\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/\"><Button variant=\"success\">Registration</Button></Nav.Link>\r\n                    <Nav.Link href=\"/auth\"><Button variant=\"light\">Auth</Button></Nav.Link>\r\n                </Nav>\r\n                }\r\n                {isAuthenticated && \r\n                <Nav className=\"mr-auto\">\r\n                    <h3 style={{ marginRight: '20px', color: '#fff'}}>{userLogin}</h3>\r\n                    <NavLink to='/auth' onClick={() => auth.logout()}><Button variant=\"danger\">Выход</Button></NavLink>\r\n                 </Nav>\r\n                }\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}","import React from 'react';\r\nimport { useRouters } from './routs';\r\nimport { BrowserRouter } from \"react-router-dom\"\r\nimport { AuthContext } from './context/Auth.context';\r\nimport { useAuth } from './hooks/auth.hook';\r\nimport { useHttp } from './hooks/http.hook';\r\nimport { Loader } from './components/Loader';\r\nimport { Navigation } from './components/Navigation';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction App() {\r\n  const { token, login, logout, userLog, ready, userId } = useAuth();\r\n  const { loading } = useHttp();\r\n  const isAuthenticated = !!token;\r\n  const routes = useRouters(isAuthenticated);\r\n  \r\n  if (!ready) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      token, login, logout, userLog, userId, isAuthenticated\r\n    }}>\r\n      <BrowserRouter>\r\n        <Navigation \r\n          isAuthenticated = {isAuthenticated} \r\n          userLogin = {userLog}/>\r\n        <Container>\r\n          {routes}\r\n        </Container>\r\n      </BrowserRouter>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null);\r\n    const [userLog, setUserLog] = useState(false);\r\n    const [userId, setUserId] = useState(false);\r\n    const [ready, setReady] = useState(null);\r\n\r\n    const login = useCallback((jwtToken, login, id) => {\r\n        setToken(jwtToken);\r\n        setUserLog(login);\r\n        setUserId(id);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userLog: login, userId: id, token: jwtToken\r\n        }));\r\n    }, [])\r\n    \r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserLog(null);\r\n        setUserId(null);\r\n        \r\n        localStorage.removeItem(storageName);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userLog, data.userId);\r\n        }\r\n        setReady(true);\r\n    }, [login])\r\n\r\n    return { login, logout, token, userLog, userId, ready }\r\n}","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { RegistrationPage } from './pages/RegistrationPage';\r\nimport { AuthPage } from './pages/AuthPage';\r\nimport { ManagerPage } from './pages/ManagerPage';\r\n\r\nexport const useRouters = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/manage\" exact>\r\n                    <ManagerPage />\r\n                </Route>\r\n                <Redirect to=\"/manage\" />\r\n            </Switch>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <RegistrationPage />\r\n            </Route>\r\n            <Route path=\"/auth\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}